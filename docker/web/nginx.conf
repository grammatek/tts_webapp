
# log only anonymized IP-addresses inside access.log
map $remote_addr $ip_anonym1 {
    default 0.0.0;
    "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" $ip;
    "~(?P<ip>[^:]+:[^:]+):" $ip;
}

map $remote_addr $ip_anonym2 {
    default .0;
    "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
    "~(?P<ip>[^:]+:[^:]+):" ::;
}

map $ip_anonym1$ip_anonym2 $ip_anonymized {
    default 0.0.0.0;
    "~(?P<ip>.*)" $ip;
}

log_format anonymized '$ip_anonymized - $remote_user [$time_local] '
  '"$request" $status $body_bytes_sent '
  '"$http_referer" "$http_user_agent"';

upstream rails_app {
   server app:3000;
}

server {
   # define your domain
   server_name tts.grammatek.com;
   listen 8080;

   # define the public application root
   root   $RAILS_ROOT/public;
   index  index.html;

   # define where Nginx should write its logs
   access_log $RAILS_ROOT/log/nginx.access.log anonymized;
   error_log $RAILS_ROOT/log/nginx.error.log;

   # deny requests for files that should never be accessed
   location ~ /\. {
      deny all;
   }

   location ~* ^.+\.(rb|log)$ {
      deny all;
   }

   # serve static (compiled) assets directly if they exist (for rails production)
   #location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
   #   try_files $uri @rails;
   #   access_log off;
   #   gzip_static on;

      # to serve pre-gzipped version
   #   expires max;
   #   add_header Cache-Control public;

   #   add_header Last-Modified "";
   #   add_header ETag "";
   #   break;
   #}

   # send non-static file requests to the app server
   location / {
      try_files $uri @rails;
   }

   location @rails {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://rails_app;
   }
}
